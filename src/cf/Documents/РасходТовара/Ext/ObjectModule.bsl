
#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	Движения.ТоварныеЗапасы.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		Движения.ТоварныеЗапасы.БлокироватьДляИзменения = Истина;
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыВДокументе.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.РасходТовара.Товары КАК ТоварыВДокументе
		|ГДЕ
		|	ТоварыВДокументе.Ссылка = &Ссылка
		|	И ТоварыВДокументе.Товар.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Услуга)";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатУслуги = Запрос.Выполнить().Выгрузить();
	РезультатУслуги.Индексы.Добавить("НомерСтроки");

	Для каждого ТекСтрокаТовары Из Товары Цикл

		Строка = РезультатУслуги.Найти(ТекСтрокаТовары.НомерСтроки, "НомерСтроки");
		Если Строка = Неопределено Тогда

			Движение = Движения.ТоварныеЗапасы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Товар = ТекСтрокаТовары.Товар;
			Движение.Склад = Склад;
			Движение.Количество = ТекСтрокаТовары.Количество;

		КонецЕсли;

		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаТовары.Товар;
		Движение.Покупатель = Покупатель;
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		
		Если Не СписатьБаллы
			И ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Накопительная") Тогда

            Движение.Скидка = 0;

		ИначеЕсли СписатьБаллы
			И ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Накопительная") Тогда
			
			Движение.Скидка = (ТекСтрокаТовары.Количество * ТекСтрокаТовары.Цена) - Движение.Сумма;
			
		ИначеЕсли ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Скидочная") Тогда
			
			Движение.Скидка = (ТекСтрокаТовары.Количество * ТекСтрокаТовары.Цена) - Движение.Сумма;
			
		Иначе	
			
			Движение.Скидка = 0;
			
		КонецЕсли;

	КонецЦикла;

	Движения.Взаиморасчеты.Записывать = Истина;
	Движение = Движения.Взаиморасчеты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Контрагент = Покупатель;
	Движение.Валюта = Валюта;

	Если Валюта.Пустая() Тогда
		Движение.Сумма = Товары.Итог("Сумма");
	Иначе

		Курс = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Дата, Новый Структура("Валюта", Валюта)).Курс;

		Если Курс = 0 Тогда
			Движение.Сумма = Товары.Итог("Сумма");
		Иначе
			Движение.Сумма = Товары.Итог("Сумма") / Курс;
		КонецЕсли;

	КонецЕсли;
	
	Если Не СписатьБаллы
		И ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Накопительная") Тогда
		
		Движение.Скидка = 0;
		
	ИначеЕсли СписатьБаллы
		И ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Накопительная") Тогда
		
		Движение.Скидка = (Товары.Итог("Количество") * Товары.Итог("Цена")) - Товары.Итог("Сумма");
		
	ИначеЕсли ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Скидочная") Тогда
		
		Движение.Скидка = (Товары.Итог("Количество") * Товары.Итог("Цена")) - Товары.Итог("Сумма");
		
	Иначе	
		
		Движение.Скидка = 0;
		
	КонецЕсли;

	Если ВидКартЛояльности.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Накопительная") Тогда
	
		Движения.БонусныеБаллы.Записывать = Истина;
		Движение = Движения.БонусныеБаллы.Добавить();
		Движение.Регистратор = Ссылка;
		Движение.Период = Дата;
		
		Если Не СписатьБаллы Тогда
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Начислено = Товары.Итог("Баллы");
		Иначе
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.КСписанию = Товары.Итог("Баллы");
		КонецЕсли;	
		
		Движение.ВидКартЛояльности = ВидКартЛояльности;
		Движение.Партнер = Покупатель;
	
	КонецЕсли;
	
	Движения.Записать();
	
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|    ТоварыВДокументе.Товар КАК Товар,
			|    СУММА(ТоварыВДокументе.Количество) КАК Количество,
			|    МАКСИМУМ(ТоварыВДокументе.НомерСтроки) КАК НомерСтроки
			|
			|ПОМЕСТИТЬ ТребуетсяТовара
			|
			|ИЗ
			|    Документ.РасходТовара.Товары КАК ТоварыВДокументе
			|
			|ГДЕ
			|    ТоварыВДокументе.Ссылка = &Ссылка
			|    И ТоварыВДокументе.Товар.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Товар)
			|
			|СГРУППИРОВАТЬ ПО
			|    ТоварыВДокументе.Товар
			|
			|ИНДЕКСИРОВАТЬ ПО
			|    Товар
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|    ПРЕДСТАВЛЕНИЕ(ТребуетсяТовара.Товар) КАК ТоварПредставление,
			|    ВЫБОР
			|        КОГДА - ЕСТЬNULL(ТоварныеЗапасыОстатки.КоличествоОстаток, 0) > ТоварыВДокументе.Количество
			|            ТОГДА ТоварыВДокументе.Количество
			|        ИНАЧЕ - ЕСТЬNULL(ТоварныеЗапасыОстатки.КоличествоОстаток, 0)
			|    КОНЕЦ КАК Нехватка,
			|    ТоварыВДокументе.Количество - ВЫБОР
			|        КОГДА - ЕСТЬNULL(ТоварныеЗапасыОстатки.КоличествоОстаток, 0) > ТоварыВДокументе.Количество
			|            ТОГДА ТоварыВДокументе.Количество
			|        ИНАЧЕ - ЕСТЬNULL(ТоварныеЗапасыОстатки.КоличествоОстаток, 0)
			|    КОНЕЦ КАК МаксимальноеКоличество,
			|    ТребуетсяТовара.НомерСтроки КАК НомерСтроки
			|
			|ИЗ
			|    ТребуетсяТовара КАК ТребуетсяТовара
			|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварныеЗапасы.Остатки(
			|                ,
			|                Товар В
			|                        (ВЫБРАТЬ
			|                            ТребуетсяТовара.Товар
			|                        ИЗ
			|                            ТребуетсяТовара)
			|                    И Склад = &Склад) КАК ТоварныеЗапасыОстатки
			|        ПО ТребуетсяТовара.Товар = ТоварныеЗапасыОстатки.Товар
			|        ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходТовара.Товары КАК ТоварыВДокументе
			|        ПО ТребуетсяТовара.Товар = ТоварыВДокументе.Товар
			|            И ТребуетсяТовара.НомерСтроки = ТоварыВДокументе.НомерСтроки
			|
			|ГДЕ
			|    ТоварыВДокументе.Ссылка = &Ссылка И
			|    0 > ЕСТЬNULL(ТоварныеЗапасыОстатки.КоличествоОстаток, 0)
			|
			|УПОРЯДОЧИТЬ ПО
			|    НомерСтроки";

		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		РезультатСНехваткой = Запрос.Выполнить();

		ВыборкаРезультатаСНехваткой = РезультатСНехваткой.Выбрать();

		Пока ВыборкаРезультатаСНехваткой.Следующий() Цикл

			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Не хватает '", "ru") 
				+ ВыборкаРезультатаСНехваткой.Нехватка 
				+ НСтр("ru = ' единиц товара'", "ru") + """" 
				+ ВыборкаРезультатаСНехваткой.ТоварПредставление 
				+ """" 
				+ НСтр("ru = ' на складе'", "ru") 
				+ """" 
				+ Склад 
				+ """." 
				+ НСтр("ru = 'Максимальное количество: '", "ru") 
				+ ВыборкаРезультатаСНехваткой.МаксимальноеКоличество 
				+ ".";
			Сообщение.Поле = НСтр("ru = 'Товары'", "ru") 
				+ "[" 
				+ (ВыборкаРезультатаСНехваткой.НомерСтроки - 1) 
				+ "]." 
				+ НСтр("ru = 'Количество'", "ru");
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить();
			Отказ = Истина;

		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если Покупатель.Пустая() Тогда

		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не указан Покупатель, для которого выписывается накладная!'", "ru");
		Сообщение.Поле = НСтр("ru = 'Покупатель'", "ru");
		Сообщение.УстановитьДанные(ЭтотОбъект);

		Сообщение.Сообщить();

		ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Покупатель"));
		Отказ = Истина;

	КонецЕсли;

	Если Склад.Пустая() И Товары.Количество() > 0 Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|    Количество(*) КАК Количество
			|ИЗ
			|    Справочник.Товары КАК Товары
			|ГДЕ
			|    Товары.Ссылка В (&ТоварыВДокументе)
			|    И Товары.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыТоваров.Товар)";

		Запрос.УстановитьПараметр("ТоварыВДокументе", Товары.ВыгрузитьКолонку("Товар"));

		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Если Выборка.Количество = 0 Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Склад"));
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказыТоваров") Тогда
		
		Организация = ДанныеЗаполнения.Организация;
		Склад = ДанныеЗаполнения.Склад;
		Покупатель = ДанныеЗаполнения.Покупатель;
		Валюта = ДанныеЗаполнения.Валюта;
		ВидЦен = ДанныеЗаполнения.ВидЦен;
		СписатьБаллы = ДанныеЗаполнения.СписатьБаллы;
		
		Для каждого ТоварОснование Из ДанныеЗаполнения.Товары цикл
	        Товар = Товары.Добавить();
	        ЗаполнитьЗначенияСвойств(Товар, ТоварОснование);		
		КонецЦикла;

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Контрагенты") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Контрагенты.ЭтоГруппа КАК ЭтоГруппа,
			|	Контрагенты.ВидЦен КАК ВидЦен
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.Ссылка = &КонтрагентСсылка";

		Запрос.УстановитьПараметр("КонтрагентСсылка", ДанныеЗаполнения);

		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() 
			И Выборка.ЭтоГруппа Тогда

			Возврат;
		КонецЕсли;

		ВидЦен = Выборка.ВидЦен;
		Покупатель = ДанныеЗаполнения.Ссылка;

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда

		Значение = Неопределено;

		Если ДанныеЗаполнения.Свойство("Покупатель", Значение) Тогда
			ВидЦен = Значение.ВидЦен;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура Пересчитать() Экспорт

	Для каждого ТекСтрокаТовары Из Товары Цикл

		ТекСтрокаТовары.Сумма = ТекСтрокаТовары.Количество * ТекСтрокаТовары.Цена;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СуммаПоТоварамВДокументе()
	
	СуммаПоТоварам = 0;

	Для каждого Товар из Товары Цикл
		СуммаПоТоварам = СуммаПоТоварам + Товар.Сумма;
	КонецЦикла;
	
	Возврат СуммаПоТоварам;

КонецФункции

#КонецОбласти