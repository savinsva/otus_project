
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДанныеПоВидуКартЛояльности();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ЗаполнитьДанныеПоВидуКартЛояльности();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанныеПоВидуКартЛояльности()

	Если ЗначениеЗаполнено(Объект.Владелец) Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВидыКартЛояльности.ПроцентСкидки КАК ПроцентСкидки,
			|	ВидыКартЛояльности.ПроцентНачисляемыхБаллов КАК ПроцентНачисляемыхБаллов,
			|	ВидыКартЛояльности.ВидБонуснойПрограммы КАК ВидБонуснойПрограммы
			|ИЗ
			|	Справочник.ВидыКартЛояльности КАК ВидыКартЛояльности
			|ГДЕ
			|	ВидыКартЛояльности.Ссылка = &Владелец";
		
		Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			ЗаполнитьЗначенияСвойств(Объект, Выборка);
			
			Если Выборка.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Скидочная") Тогда
				Элементы.ПроцентСкидки.Доступность = Истина;
				Элементы.ПроцентНачисляемыхБаллов.Доступность = Ложь;
			ИначеЕсли Выборка.ВидБонуснойПрограммы = ПредопределенноеЗначение("Перечисление.ВидыБонусныхПрограмм.Накопительная") Тогда
				Элементы.ПроцентСкидки.Доступность = Ложь;
				Элементы.ПроцентНачисляемыхБаллов.Доступность = Истина;
			КонецЕсли;
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти