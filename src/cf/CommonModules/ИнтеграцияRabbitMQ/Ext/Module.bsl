
#Область ПрограммныйИнтерфейс

Процедура ЗаписьВОчередьВRabbitMQ(Источник, Отказ) Экспорт
	
	ИмяМетаданных = Источник.Метаданные().Имя;
	Маршруты = МенеджерОбъектаПоСсылке(Источник.Ссылка).УстановитьМаршрутыОтправкиRabbitMQ(); 
	
	ПакетОбмена = Справочники.ПакетыОбмена.СоздатьЭлемент(); 
	ПакетОбмена.Наименование = Строка(Источник.Ссылка);
	Сообщение = Преобразовать(Источник);
	ХЗПакета = Новый ХранилищеЗначения(Сообщение, Новый СжатиеДанных(9));
	ПакетОбмена.Данные = ХЗПакета;
	
	лПоток = новый ПотокВПамяти();
	ЗаписьДанных = новый ЗаписьДанных(лПоток,КодировкаТекста.UTF8);
	ЗаписьДанных.ЗаписатьСимволы(Сообщение);
	лРазмер = лПоток.Размер();
	
	ПакетОбмена.Размер = лРазмер / 1000;
	ПакетОбмена.Записать();  
	
	Для Каждого ПараметрыОбмена Из Маршруты Цикл
		
		МенеджерЗаписи = РегистрыСведений.ОчередьНаВыгрузкуВRabbitMQ.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ТекущаяДатаСеанса(); 
		МенеджерЗаписи.Объект = Источник.Ссылка;

		ЗаполнитьЗначенияСвойств(МенеджерЗаписи,ПараметрыОбмена);

		МенеджерЗаписи.Прочитать();     

		Если Не МенеджерЗаписи.Выбран() Тогда
			
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,ПараметрыОбмена);
			
			МенеджерЗаписи.Период = ТекущаяДатаСеанса();
			МенеджерЗаписи.Объект = Источник.Ссылка;
			МенеджерЗаписи.ПакетОбмена = ПакетОбмена.Ссылка;
			МенеджерЗаписи.Записать();

		КонецЕсли;

	КонецЦикла; 

КонецПроцедуры

Функция МенеджерОбъектаПоСсылке(Ссылка) Экспорт
	
	ИмяОбъекта = Ссылка.Метаданные().Имя;
	ТипСсылки = ТипЗнч(Ссылка);
	
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат Справочники[ИмяОбъекта];
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат Документы[ИмяОбъекта];
		
	ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат БизнесПроцессы[ИмяОбъекта];
		
	ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат ПланыВидовХарактеристик[ИмяОбъекта];
		
	ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат ПланыСчетов[ИмяОбъекта];
		
	ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат ПланыВидовРасчета[ИмяОбъекта];
		
	ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат Задачи[ИмяОбъекта];
		
	ИначеЕсли ПланыОбмена.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат ПланыОбмена[ИмяОбъекта];
		
	ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипСсылки) Тогда
		Возврат Перечисления[ИмяОбъекта];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ОтправитьСообщениеВRabbitMQ() Экспорт 
	
	RabbitMQОбъект = Обработки.PinkRabbitMQ.Создать(); 
	RabbitMQОбъект.ПодключитьКомпоненту(); 
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОчередьНаВыгрузкуВRabbitMQСрезПоследних.ТочкаОбмена КАК ТочкаОбмена,
		|	ОчередьНаВыгрузкуВRabbitMQСрезПоследних.ИмяОчереди КАК ИмяОчереди,
		|	ОчередьНаВыгрузкуВRabbitMQСрезПоследних.КлючМаршрутизации КАК КлючМаршрутизации,
		|	ОчередьНаВыгрузкуВRabbitMQСрезПоследних.ПакетОбмена КАК ПакетОбмена,
		|	ОчередьНаВыгрузкуВRabbitMQСрезПоследних.Период КАК Период,
		|	ОчередьНаВыгрузкуВRabbitMQСрезПоследних.Объект КАК Объект
		|ИЗ
		|	РегистрСведений.ОчередьНаВыгрузкуВRabbitMQ.СрезПоследних КАК ОчередьНаВыгрузкуВRabbitMQСрезПоследних
		|ГДЕ
		|	НЕ ОчередьНаВыгрузкуВRabbitMQСрезПоследних.Выгружено";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл    
		
		ПараметрыОбмена = Новый Структура("ТочкаОбмена, ИмяОчереди, КлючМаршрутизации, ТекстСообщения");
		ЗаполнитьЗначенияСвойств(ПараметрыОбмена,Выборка);
		ПараметрыОбмена.ТекстСообщения = Выборка.ПакетОбмена.Данные.Получить();
		RabbitMQОбъект.ОтправитьСообщение(ПараметрыОбмена);	
		
		Если ПараметрыОбмена.ТекстОшибки = "" Тогда
			
			МенеджерЗаписи = РегистрыСведений.ОчередьНаВыгрузкуВRabbitMQ.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.Прочитать();

			Если МенеджерЗаписи.Выбран() Тогда
				ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
				МенеджерЗаписи.Выгружено = Истина;
				МенеджерЗаписи.Записать();
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция Преобразовать(Параметр)  
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Параметр);

	Возврат ЗаписьXML.Закрыть();

КонецФункции

#КонецОбласти